{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://agile3d-demo.example.com/schemas/branch-config.schema.json",
  "title": "AGILE3D Branch Configuration",
  "description": "Schema for AGILE3D model branch configurations with control knobs and performance metrics",
  "type": "object",
  "required": ["branch_id", "name", "controlKnobs", "performance", "modelFamily"],
  "properties": {
    "branch_id": {
      "type": "string",
      "description": "Unique identifier for the branch (e.g., 'CP_Pillar_032', 'DSVT_Voxel')",
      "pattern": "^[A-Za-z0-9_]+$"
    },
    "name": {
      "type": "string",
      "description": "Human-readable name for the branch",
      "minLength": 1
    },
    "controlKnobs": {
      "type": "object",
      "description": "The 5 control knobs for AGILE3D branch configuration",
      "required": ["encodingFormat", "spatialResolution", "spatialEncoding", "featureExtractor", "detectionHead"],
      "properties": {
        "encodingFormat": {
          "type": "string",
          "description": "Point cloud encoding format",
          "enum": ["voxel", "pillar"]
        },
        "spatialResolution": {
          "type": "number",
          "description": "Grid size in meters",
          "enum": [0.16, 0.24, 0.32, 0.48, 0.64]
        },
        "spatialEncoding": {
          "type": "string",
          "description": "Spatial encoding method",
          "enum": ["HV", "DV"]
        },
        "featureExtractor": {
          "type": "string",
          "description": "3D feature extraction backbone",
          "enum": ["transformer", "sparse_cnn", "2d_cnn"]
        },
        "detectionHead": {
          "type": "string",
          "description": "Detection head type",
          "enum": ["anchor", "center"]
        }
      },
      "additionalProperties": false
    },
    "performance": {
      "type": "object",
      "description": "Performance characteristics of this branch",
      "required": ["memoryFootprint", "latency", "accuracy"],
      "properties": {
        "memoryFootprint": {
          "type": "number",
          "description": "GPU memory usage in GB",
          "minimum": 0
        },
        "latency": {
          "type": "object",
          "description": "Latency statistics at different contention levels",
          "required": ["noContention", "lightContention", "moderateContention", "intenseContention", "peakContention"],
          "properties": {
            "noContention": {
              "$ref": "#/definitions/latencyStats"
            },
            "lightContention": {
              "$ref": "#/definitions/latencyStats"
            },
            "moderateContention": {
              "$ref": "#/definitions/latencyStats"
            },
            "intenseContention": {
              "$ref": "#/definitions/latencyStats"
            },
            "peakContention": {
              "$ref": "#/definitions/latencyStats"
            }
          },
          "additionalProperties": false
        },
        "accuracy": {
          "type": "object",
          "description": "Accuracy (mAP) per scene type",
          "required": ["vehicleHeavy", "pedestrianHeavy", "mixed"],
          "properties": {
            "vehicleHeavy": {
              "type": "number",
              "description": "mAP for vehicle-heavy scenes",
              "minimum": 0,
              "maximum": 100
            },
            "pedestrianHeavy": {
              "type": "number",
              "description": "mAP for pedestrian-heavy scenes",
              "minimum": 0,
              "maximum": 100
            },
            "mixed": {
              "type": "number",
              "description": "mAP for mixed scenes",
              "minimum": 0,
              "maximum": 100
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "modelFamily": {
      "type": "string",
      "description": "Model family/architecture",
      "enum": ["DSVT", "CenterPoint", "PointPillars", "VoxelNet"]
    }
  },
  "additionalProperties": false,
  "definitions": {
    "latencyStats": {
      "type": "object",
      "description": "Latency mean and standard deviation",
      "required": ["mean", "std"],
      "properties": {
        "mean": {
          "type": "number",
          "description": "Mean latency in milliseconds",
          "minimum": 0
        },
        "std": {
          "type": "number",
          "description": "Standard deviation in milliseconds",
          "minimum": 0
        }
      },
      "additionalProperties": false
    }
  }
}
